)
,". You live in ",data_tx$SIZEPLACE[i]," ",data_tx$P_STATE[i]
," and identify politically as ",data_tx$IDEO[i]
,". In terms of political party you consider yourself ",data_tx$PARTYFULL[i]
,"."
,ifelse(data_tx$VOTE16CHOICE[i] %in% c("Hillary Clinton","Donald Trump"),
paste("In 2016, you voted for ",data_tx$VOTE16CHOICE[i],"."),
ifelse(data_tx$VOTE16CHOICE[i] == "Someone else",
"You voted for a third-party candidate in 2016.",
ifelse(data_tx$VOTE16CHOICE[i] == "Did not vote",
"You did not vote in 2016.",""
)
)
)
," In the 2020 presidential election, would this person vote for Joe Biden, Donald Trump, Howie Hawkins, or Jo Jorgensen?"
," Please answer with only the candidate's last name."
,sep='')
}
for (i in 1:nrow(data_tx)) {
data_tx$descr_no16[i] <-
paste(
"Imagine you are a person who fits the following demographic description.",
"Gender: ", data_tx$GENDER[i]
,", Age group: ", data_tx$AGE65[i]
,", Yearly total household income bracket: ",data_tx$INCOME[i]
,", Religious affiliation: ", data_tx$RELIG[i]
,ifelse(
data_tx$RACETH[i] == "XX", "",
paste(", Racial/ethnic group: ",data_tx$RACETH[i])
)
,". You live in ",data_tx$SIZEPLACE[i]," ",data_tx$P_STATE[i]
," and identify politically as ",data_tx$IDEO[i]
,". In terms of political party you consider yourself ",data_tx$PARTYFULL[i]
,"."
," In the 2020 presidential election, would this person vote for Joe Biden, Donald Trump, Howie Hawkins, or Jo Jorgensen?"
," Please answer with only the candidate's last name."
,sep='')
}
data_tx_out <- data_tx[
c(
'SU_ID'
,'POLLCLOSE_STATE_WEIGHT'
,'FINALVOTE_STATE_WEIGHT'
,'P_STATE'
,'LIKELYVOTER'
,'PRESVOTE'
,'descr'
,'descr_no16'
)
]
write.csv(data_tx_out,"/Users/yehyland/Downloads/votecast20/AP VoteCast 2020 General Election Files/input_tx.csv")
View(dataimm)
set.seed(1769)
in_train4 <- createDataPartition(data_tx$biden, p=3/4, list=FALSE)
training_tx <- data_tx[in_train4,]
testing_tx <- data_tx[-in_train4,]
biden_tx <- train(biden ~
factor(GENDER) + factor(AGE65) + factor(EDUC) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE) + factor(VOTE16CHOICE)
,data=training_tx, method="glm")
biden_tx <- train(biden ~
factor(GENDER) + factor(AGE65) + factor(EDUC) + factor(RACETH) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE) + factor(VOTE16CHOICE)
,data=training_tx, method="glm")
trump_tx <- train(trump ~
factor(GENDER) + factor(AGE65) + factor(EDUC) + factor(RACETH) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE) + factor(VOTE16CHOICE)
,data=training_tx, method="glm")
testing_tx$modeled_biden <- predict(biden_tx,newdata=testing_tx)
table(data_tx$EDUC)
data_tx$EDUC <- ifelse(data_tx$EDUC == 'REFUSED',NA,data_tx$EDUC)
set.seed(1769)
in_train4 <- createDataPartition(data_tx$biden, p=3/4, list=FALSE)
training_tx <- data_tx[in_train4,]
testing_tx <- data_tx[-in_train4,]
biden_tx <- train(biden ~
factor(GENDER) + factor(AGE65) + factor(EDUC) + factor(RACETH) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE) + factor(VOTE16CHOICE)
,data=training_tx, method="glm")
trump_tx <- train(trump ~
factor(GENDER) + factor(AGE65) + factor(EDUC) + factor(RACETH) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE) + factor(VOTE16CHOICE)
,data=training_tx, method="glm")
testing_tx$modeled_biden <- predict(biden_tx,newdata=testing_tx)
testing_tx$modeled_biden <- predict(biden_tx,newdata=testing_tx)
table(data_tx$EDUC)
data_tx$EDUC <- ifelse(data_tx$EDUC == 'REFUSED',NA,data_tx$EDUC)
table(data_tx$EDUC)
data_tx$EDUC <- ifelse(data_tx$EDUC == 'REFUSED',NULL,data_tx$EDUC)
table(data_tx$EDUC)
data_tx$EDUC <- ifelse(data_tx$EDUC == 'REFUSED',is.na(),data_tx$EDUC)
table(data_tx$EDUC)
data_tx$EDUC <- replace(data_tx$EDUC, data_tx$EDUC =='REFUSED', NA)
table(data_tx$EDUC)
data_tx$EDUC <- replace(data_tx$EDUC, data_tx$EDUC ='REFUSED', NA)
data_tx$EDUC <- replace(data_tx$EDUC, data_tx$EDUC =="REFUSED", NA)
table(data_tx$EDUC)
data_tx<-data_tx[!(data_tx$EDUC=="REFUSED"),]
table(data_tx$EDUC)
data_tx<-data_tx[!(data_tx$EDUC==" REFUSED"),]
table(data_tx$EDUC)
set.seed(1769)
in_train4 <- createDataPartition(data_tx$biden, p=3/4, list=FALSE)
training_tx <- data_tx[in_train4,]
testing_tx <- data_tx[-in_train4,]
biden_tx <- train(biden ~
factor(GENDER) + factor(AGE65) + factor(EDUC) + factor(RACETH) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE) + factor(VOTE16CHOICE)
,data=training_tx, method="glm")
trump_tx <- train(trump ~
factor(GENDER) + factor(AGE65) + factor(EDUC) + factor(RACETH) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE) + factor(VOTE16CHOICE)
,data=training_tx, method="glm")
testing_tx$modeled_biden <- predict(biden_tx,newdata=testing_tx)
testing_tx$modeled_trump <- predict(trump_tx,newdata=testing_tx)
testing_tx$votemodel <- ifelse(testing_tx$modeled_trump>testing_tx$modeled_biden,"Trump",
ifelse(
testing_tx$modeled_biden>testing_tx$modeled_trump,"Biden",""
))
aggregate(POLLCLOSE_STATE_WEIGHT ~ votemodel + LIKELYVOTER, data=testing_tx,sum)
1553125.1/sum(1553125.1,1636216.7)
aggregate(POLLCLOSE_STATE_WEIGHT ~ PRESVOTE + LIKELYVOTER, data=data_tx,sum)
6296938.4/sum(6296938.4,6070059.2)
aggregate(POLLCLOSE_STATE_WEIGHT ~ votemodel + LIKELYVOTER, data=testing_tx,sum)
aggregate(POLLCLOSE_STATE_WEIGHT ~ PRESVOTE + LIKELYVOTER, data=data_tx,sum)
data_mn <- data[which(data$P_STATE=='Minnesota'),]
for (i in 1:nrow(data_mn)) {
data_mn$biden[i] <- ifelse(data_mn$PRESVOTE[i] == 'Joe Biden',1,0)
data_mn$trump[i] <- ifelse(data_mn$PRESVOTE[i] == 'Donald Trump',1,0)
}
for (i in 1:nrow(data_mn)) {
data_mn$descr[i] <-
paste(
"Imagine you are a person who fits the following demographic description.",
"Gender: ", data_mn$GENDER[i]
,", Age group: ", data_mn$AGE65[i]
,", Yearly total household income bracket: ",data_mn$INCOME[i]
,", Religious affiliation: ", data_mn$RELIG[i]
,ifelse(
data_mn$RACETH[i] == "XX", "",
paste(", Racial/ethnic group: ",data_mn$RACETH[i])
)
,". You live in ",data_mn$SIZEPLACE[i]," ",data_mn$P_STATE[i]
," and identify politically as ",data_mn$IDEO[i]
,". In terms of political party you consider yourself ",data_mn$PARTYFULL[i]
,"."
,ifelse(data_mn$VOTE16CHOICE[i] %in% c("Hillary Clinton","Donald Trump"),
paste("In 2016, you voted for ",data_mn$VOTE16CHOICE[i],"."),
ifelse(data_mn$VOTE16CHOICE[i] == "Someone else",
"You voted for a third-party candidate in 2016.",
ifelse(data_mn$VOTE16CHOICE[i] == "Did not vote",
"You did not vote in 2016.",""
)
)
)
," In the 2020 presidential election, would this person vote for Joe Biden, Donald Trump, Howie Hawkins, or Jo Jorgensen?"
," Please answer with only the candidate's last name."
,sep='')
}
for (i in 1:nrow(data_mn)) {
data_mn$descr_no16[i] <-
paste(
"Imagine you are a person who fits the following demographic description.",
"Gender: ", data_mn$GENDER[i]
,", Age group: ", data_mn$AGE65[i]
,", Yearly total household income bracket: ",data_mn$INCOME[i]
,", Religious affiliation: ", data_mn$RELIG[i]
,ifelse(
data_mn$RACETH[i] == "XX", "",
paste(", Racial/ethnic group: ",data_mn$RACETH[i])
)
,". You live in ",data_mn$SIZEPLACE[i]," ",data_mn$P_STATE[i]
," and identify politically as ",data_mn$IDEO[i]
,". In terms of political party you consider yourself ",data_mn$PARTYFULL[i]
,"."
," In the 2020 presidential election, would this person vote for Joe Biden, Donald Trump, Howie Hawkins, or Jo Jorgensen?"
," Please answer with only the candidate's last name."
,sep='')
}
data_mn_out <- data_mn[
c(
'SU_ID'
,'POLLCLOSE_STATE_WEIGHT'
,'FINALVOTE_STATE_WEIGHT'
,'P_STATE'
,'LIKELYVOTER'
,'PRESVOTE'
,'descr'
,'descr_no16'
)
]
write.csv(data_mn_out,"/Users/yehyland/Downloads/votecast20/AP VoteCast 2020 General Election Files/input_mn.csv")
data_mn<-data_mn[!(data_mn$EDUC==" REFUSED"),]
set.seed(1769)
in_train4 <- createDataPartition(data_mn$biden, p=3/4, list=FALSE)
training_mn <- data_mn[in_train4,]
testing_mn <- data_mn[-in_train4,]
biden_mn <- train(biden ~
factor(GENDER) + factor(AGE65) + factor(EDUC) + factor(RACETH) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE) + factor(VOTE16CHOICE)
,data=training_mn, method="glm")
trump_mn <- train(trump ~
factor(GENDER) + factor(AGE65) + factor(EDUC) + factor(RACETH) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE) + factor(VOTE16CHOICE)
,data=training_mn, method="glm")
testing_mn$modeled_biden <- predict(biden_mn,newdata=testing_mn)
testing_mn$modeled_trump <- predict(trump_mn,newdata=testing_mn)
testing_mn$votemodel <- ifelse(testing_mn$modeled_trump>testing_mn$modeled_biden,"Trump",
ifelse(
testing_mn$modeled_biden>testing_mn$modeled_trump,"Biden",""
))
aggregate(POLLCLOSE_STATE_WEIGHT ~ votemodel + LIKELYVOTER, data=testing_mn,sum)
aggregate(POLLCLOSE_STATE_WEIGHT ~ votemodel + LIKELYVOTER, data=testing_mn,sum)
402210.35/sum(402210.35,354312.35)
## GLM result
aggregate(POLLCLOSE_STATE_WEIGHT ~ PRESVOTE + LIKELYVOTER, data=data_mn,sum)
1611808.46/sum(1611808.46,1313513.97)
1717077/(1717077+1484065)
df <- read.csv("/Users/yehyland/Downloads/votecast20/AP VoteCast 2020 General Election Files/AP_VOTECAST_2022_midterm.csv")
data <- df[c('SU_ID'
,'POLLCLOSE_STATE_WEIGHT'
,'FINALVOTE_STATE_WEIGHT'
,'POLLCLOSE_NATIONAL_WEIGHT'
,'FINALVOTE_NATIONAL_WEIGHT'
,'P_STATE'
,'LIKELYVOTER'
,'RACE0_VOTE'
,'PRESVOTE'
,'GENDER'
,'AGE65'
,'RACETH'
,'EDUC'
,'INCOME'
,'PARTYFULL'
,'IDEO'
,'RELIG'
,'SIZEPLACE'
,'VOTE16CHOICE')]
head(data)
head(df)
View(df)
View(df)
View(df[which(df$P_STATE=='(49) Wisconsin'),])
data <- df[c('SU_ID'
,'POLLCLOSE_STATE_WEIGHT'
,'FINALVOTE_STATE_WEIGHT'
,'P_STATE'
,'LIKELYVOTER'
,'RACE1_VOTE'
,'RACE1_PARTY'
,'GENDER'
,'AGE65'
,'RACETH'
,'EDUC'
,'INCOME'
,'PARTYFULL'
,'IDEO'
,'RELIG'
,'SIZEPLACE'
,'VOTE16CHOICE')]
data <- df[c('SU_ID'
,'POLLCLOSE_STATE_WEIGHT'
,'FINALVOTE_STATE_WEIGHT'
,'P_STATE'
,'LIKELYVOTER'
,'RACE1_VOTE'
,'RACE1_PARTY'
,'GENDER'
,'AGE65'
,'RACETH'
,'EDUC'
,'INCOME'
,'PARTYFULL'
,'IDEO'
,'RELIG'
,'SIZEPLACE')]
for (i in 1:nrow(data)) {
data$PARTYFULL[i] <-   substring(data$PARTYFULL[i],5)
data$IDEO[i] <-   substring(data$IDEO[i],5)
data$AGE65[i] <-   substring(data$AGE65[i],5)
data$GENDER[i] <-   substring(data$GENDER[i],5)
data$RACETH[i] <-   ifelse(
substring(data$RACETH[i],0,4) %in% c("(88)","(99)"),"XX",
substring(data$RACETH[i],5)
)
data$EDUC[i] <-   substring(data$EDUC[i],5)
data$INCOME[i] <-   substring(data$INCOME[i],5)
data$RELIG[i] <- substring(data$RELIG[i],5)
data$SIZEPLACE[i] <- substring(data$SIZEPLACE[i],5)
data$LIKELYVOTER[i] <- substring(data$LIKELYVOTER[i],5)
data$PRESVOTE[i] <- substring(data$PRESVOTE[i],5)
data$P_STATE[i] <- substring(data$P_STATE[i],6)
}
data <- df[c('SU_ID'
,'POLLCLOSE_STATE_WEIGHT'
,'FINALVOTE_STATE_WEIGHT'
,'P_STATE'
,'LIKELYVOTER'
,'RACE1_VOTE'
,'RACE1_PARTY'
,'GENDER'
,'AGE65'
,'RACETH'
,'EDUC'
,'INCOME'
,'PARTYFULL'
,'IDEO'
,'RELIG'
,'SIZEPLACE')]
for (i in 1:nrow(data)) {
data$PARTYFULL[i] <-   substring(data$PARTYFULL[i],5)
data$IDEO[i] <-   substring(data$IDEO[i],5)
data$AGE65[i] <-   substring(data$AGE65[i],5)
data$GENDER[i] <-   substring(data$GENDER[i],5)
data$RACETH[i] <-   ifelse(
substring(data$RACETH[i],0,4) %in% c("(88)","(99)"),"XX",
substring(data$RACETH[i],5)
)
data$EDUC[i] <-   substring(data$EDUC[i],5)
data$INCOME[i] <-   substring(data$INCOME[i],5)
data$RELIG[i] <- substring(data$RELIG[i],5)
data$SIZEPLACE[i] <- substring(data$SIZEPLACE[i],5)
data$LIKELYVOTER[i] <- substring(data$LIKELYVOTER[i],5)
data$RACE1_VOTE[i] <- substring(data$RACE1_VOTE[i],6)
data$P_STATE[i] <- substring(data$P_STATE[i],6)
}
data$RACE1_VOTE[199993]
data$RACE1_VOTE[19999]
data$RACE1_VOTE[1999]
data$RACE1_VOTE[19992]
data_wi <- data[which(data$P_STATE=='Wisconsin'),]
data$RACE1_VOTE[19992]
data_wi$RACE1_VOTE[333]
data_wi$RACE1_VOTE[338]
for (i in 1:nrow(data)) {
#  data$PARTYFULL[i] <-   substring(data$PARTYFULL[i],5)
#  data$IDEO[i] <-   substring(data$IDEO[i],5)
#  data$AGE65[i] <-   substring(data$AGE65[i],5)
#  data$GENDER[i] <-   substring(data$GENDER[i],5)
#  data$RACETH[i] <-   ifelse(
#    substring(data$RACETH[i],0,4) %in% c("(88)","(99)"),"XX",
#    substring(data$RACETH[i],5)
#  )
#  data$EDUC[i] <-   substring(data$EDUC[i],5)
#  data$INCOME[i] <-   substring(data$INCOME[i],5)
#  data$RELIG[i] <- substring(data$RELIG[i],5)
#  data$SIZEPLACE[i] <- substring(data$SIZEPLACE[i],5)
#  data$LIKELYVOTER[i] <- substring(data$LIKELYVOTER[i],5)
data$RACE1_VOTE[i] <- substring(data$RACE1_VOTE[i],2)
#  data$P_STATE[i] <- substring(data$P_STATE[i],6)
}
for (i in 1:nrow(data)) {
#  data$PARTYFULL[i] <-   substring(data$PARTYFULL[i],5)
#  data$IDEO[i] <-   substring(data$IDEO[i],5)
#  data$AGE65[i] <-   substring(data$AGE65[i],5)
#  data$GENDER[i] <-   substring(data$GENDER[i],5)
#  data$RACETH[i] <-   ifelse(
#    substring(data$RACETH[i],0,4) %in% c("(88)","(99)"),"XX",
#    substring(data$RACETH[i],5)
#  )
#  data$EDUC[i] <-   substring(data$EDUC[i],5)
#  data$INCOME[i] <-   substring(data$INCOME[i],5)
#  data$RELIG[i] <- substring(data$RELIG[i],5)
#  data$SIZEPLACE[i] <- substring(data$SIZEPLACE[i],5)
#  data$LIKELYVOTER[i] <- substring(data$LIKELYVOTER[i],5)
data$RACE1_VOTE[i] <- substring(data$RACE1_VOTE[i],2)
#  data$P_STATE[i] <- substring(data$P_STATE[i],6)
}
data_wi <- data[which(data$P_STATE=='Wisconsin'),]
data_wi$RACE1_VOTE[333]
for (i in 1:nrow(data_wi)) {
data_wi$johnson[i] <- ifelse(data_wi$RACE1_VOTE[i] == ' Ron Johnson',1,0)
data_wi$barnes[i] <- ifelse(data_wi$RACE1_VOTE[i] == ' Mandela Barnes',1,0)
}
sum(data_wi$johnson)
table(data_wi$GENDER)
table(data_wi$AGE65)
table(data_wi$RACETH)
for (i in 1:nrow(data_wi)) {
data_wi$descr_no16[i] <-
paste(
"Imagine you are a person who fits the following demographic description.",
"Gender: ", data_wi$GENDER[i]
,", Age group: ", data_wi$AGE65[i]
,", Yearly total household income bracket: ",data_wi$INCOME[i]
,", Religious affiliation: ", data_wi$RELIG[i]
,ifelse(
data_wi$RACETH[i] == "XX", "",
paste(", Racial/ethnic group: ",data_wi$RACETH[i])
)
,". You live in ",data_wi$SIZEPLACE[i]," ",data_wi$P_STATE[i]
," and identify politically as ",data_wi$IDEO[i]
,". In terms of political party you consider yourself ",data_wi$PARTYFULL[i]
,"."
," In the 2022 U.S. Senate election in Wisconsin, would this person vote for Ron Johnson or Mandela Barnes?"
," Please answer with only the candidate's last name."
,sep='')
}
data_wi$descr_no16[444]
data_wi_out <- data_wi[
c(
'SU_ID'
,'POLLCLOSE_STATE_WEIGHT'
,'FINALVOTE_STATE_WEIGHT'
,'P_STATE'
,'LIKELYVOTER'
,'RACE1_VOTE'
,'descr_no16'
)
]
write.csv(data_wi_out,"/Users/yehyland/Downloads/votecast20/AP VoteCast 2020 General Election Files/input_wi22.csv")
data_wi$johnson
set.seed(1769)
in_train4 <- createDataPartition(data_wi$barnes, p=3/4, list=FALSE)
library(caret)
library(mlbench)
library(tidyverse)
library(dplyr)
in_train4 <- createDataPartition(data_wi$barnes, p=3/4, list=FALSE)
training_wi <- data_wi[in_train4,]
testing_wi <- data_wi[-in_train4,]
barnes_mod <- train(barnes ~
factor(GENDER) + factor(AGE65) + factor(EDUC) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE)
,data=training_wi, method="glm")
johnson_mod <- train(johnson ~
factor(GENDER) + factor(AGE65) + factor(EDUC) +
factor(INCOME) + factor(PARTYFULL) + factor(IDEO) + factor(RELIG) +
factor(SIZEPLACE)
,data=training_wi, method="glm")
testing_wi$mod_barnes <- predict(barnes_mod,newdata=testing_wi)
testing_wi$mod_johnson <- predict(johnson_mod,newdata=testing_wi)
testing_wi$votemodel <- ifelse(testing_wi$mod_johnson>testing_wi$mod_barnes,"Johnson",
ifelse(
testing_wi$mod_barnes>testing_wi$mod_johnson,"Barnes",""
))
aggregate(POLLCLOSE_STATE_WEIGHT ~ votemodel + LIKELYVOTER, data=testing_wi,sum)
367066.94/sum(367066.94,391855.20)
aggregate(POLLCLOSE_STATE_WEIGHT ~ RACE1_VOTE + LIKELYVOTER, data=data_wi,sum)
1373357.40/sum(1373357.40,1506235.86)
data_mn$descr[3331]
data_arizona$PRESVOTE
table(data_arizona$PRESVOTE)
1860+2549
table(testing$P_STATE)
table(testing$PRESVOTE)
table(testing$model)
table(testing$PRESVOTE, testing$LIKELYVOTER)
403+518
table(data_arizona$PRESVOTE, data_arizona$LIKELYVOTER)
1541+2157
table(data_wi$PRESVOTE, data_wi$LIKELYVOTER)
table(data_wi$PRESVOTE
)
table(data_wi$RACE1_VOTE, data_wi$LIKELYVOTER)
1827+1319
table(testing_wi$votemodel, data_wi$LIKELYVOTER)
table(testing_wi$votemodel)
652+442
table(testing_wi$votemodel + testing_wi$LIKELYVOTER)
table(testing_wi$votemodel , testing_wi$LIKELYVOTER)
492+350
source("~/Downloads/BFP Data Analyst Exam Materials/1d.csv", encoding = 'UTF-8')
df <- read.csv('"~/Downloads/BFP Data Analyst Exam Materials/1d.csv",  :
~/Downloads/BFP Data Analyst Exam Materials/1d.csv')
df <- read.csv("~/Downloads/BFP Data Analyst Exam Materials/1d.csv")
head(df)
summary(lm(df$DSO_ticket_buyer_model ~ df$number_DSO_tickets_purched_after_8_concerts))
plot(lm(df$DSO_ticket_buyer_model ~ df$number_DSO_tickets_purched_after_8_concerts))
plot(jitter(df$number_DSO_tickets_purched_after_8_concerts),df$DSO_ticket_buyer_model)
lm(jitter(df$number_DSO_tickets_purched_after_8_concerts) ~ df$DSO_ticket_buyer_model)
,
plot(lm(df$DSO_ticket_buyer_model ~ df$number_DSO_tickets_purched_after_8_concerts))
plot(jitter(df$number_DSO_tickets_purched_after_8_concerts),df$DSO_ticket_buyer_model)
plot(df$DSO_ticket_buyer_model,jitter(df$number_DSO_tickets_purched_after_8_concerts))
lines(predict(lm(jitter(df$number_DSO_tickets_purched_after_8_concerts) ~ df$DSO_ticket_buyer_model)))
library(ggplot2)
ggplot(df, aes(x=DSO_ticket_buyer_model, y=jitter(number_DSO_tickets_purched_after_8_concerts))) +
geom_point() +
geom_smooth(method=lm)
ggplot(df, aes(x=DSO_ticket_buyer_model, y==(number_DSO_tickets_purched_after_8_concerts))) +
geom_point() +
geom_smooth(method=lm)
ggplot(df, aes(x=DSO_ticket_buyer_model, y==(number_DSO_tickets_purched_after_8_concerts)) +
geom_point() +
geom_smooth(method=lm)
ggplot(df, aes(x=DSO_ticket_buyer_model, y==(number_DSO_tickets_purched_after_8_concerts) +
ggplot(df, aes(x=DSO_ticket_buyer_model, y==(number_DSO_tickets_purched_after_8_concerts) +
geom_point() +
geom_smooth(method=lm)
)
))
ggplot(df, aes(x=DSO_ticket_buyer_model, y=jitter(number_DSO_tickets_purched_after_8_concerts))) +
geom_point() +
geom_smooth(method=lm)
rm(list=ls())
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
setwd("/Users/yehyland/iCloud Drive (Archive)/Desktop/RPK/githublink/y2025/y2025")
setwd("/Users/yehyland/iCloud Drive (Archive)/Desktop/RPK/githublink/y2025/y2025")
